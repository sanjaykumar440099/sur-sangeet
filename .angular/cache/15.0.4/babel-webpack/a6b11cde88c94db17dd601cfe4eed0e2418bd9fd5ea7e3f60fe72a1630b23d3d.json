{"ast":null,"code":"import { throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    constructor(http) {\n      this.http = http;\n      this.apiBaseUrl = environment.baseUrl;\n    }\n    // login api\n    login(data) {\n      const url = this.apiBaseUrl + 'apiRouter/login';\n      return this.http.post(url, data, {\n        observe: 'response'\n      }).pipe(map(response => {\n        return response.body;\n      }), catchError(error => {\n        return throwError(error);\n      }));\n    }\n    // login api\n    signup(data) {\n      const url = this.apiBaseUrl + 'apiRouter/register';\n      return this.http.post(url, data, {\n        observe: 'response'\n      }).pipe(map(response => {\n        return response.body;\n      }), catchError(error => {\n        return throwError(error);\n      }));\n    }\n  }\n  AuthService.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  AuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}